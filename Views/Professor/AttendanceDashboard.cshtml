@model IEnumerable<Attendance>

@{
    ViewData["Title"] = "Attendance Dashboard";
}

<h2>Attendance Dashboard for @ViewBag.SubjectName</h2>

<!-- Filter Form -->
<form asp-action="AttendanceDashboard" method="get">
    <input type="hidden" name="subjectId" value="@ViewBag.SubjectId" />

    <div>
        <label>Filter by Date:</label>
        <input type="date" name="date" />
    </div>

    <div>
        <label>Filter by Week:</label>
        <select name="week">
            <option value="">-- Select Week --</option>
            @for (int i = 1; i <= 15; i++)
            {
                <option value="@i">Week @i</option>
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Apply Filter</button>
</form>

<hr />

<!-- Attendance Records Table -->
@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Student Name</th>
                <th>Fingerprint ID</th>
                <th>Attendance Status</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var record in Model)
            {
                <tr>
                    <td>@record.Student.Name</td>
                    <td>@record.Student.FingerprintID</td>
                    <td>@(record.Present ? "Present" : "Absent")</td>
                    <td>@record.LessonDate.ToString("dd/MM/yyyy")</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Export to Excel Button -->
    <h3>Export Attendance Data</h3>
    <form asp-action="ExportAttendanceToExcel" method="get">
        <input type="hidden" name="subjectId" value="@ViewBag.SubjectId" />

        <div>
            <label>Select Week to Export:</label>
            <select name="week">
                <option value="">-- Select Week --</option>
                @for (int i = 1; i <= 15; i++)
                {
                    <option value="@i">Week @i</option>
                }
            </select>
        </div>

        <div>
            <label>Or Select Date to Export:</label>
            <input type="date" name="date" />
        </div>

        <button type="submit" class="btn btn-success">Export to Excel</button>
    </form>

}
else
{
    <p>No attendance records found for the selected filters.</p>
}

<!-- Session Control Buttons -->
<div>
    <form asp-action="StartSession" method="post" style="display: inline;">
        <input type="hidden" name="subjectId" value="@ViewBag.SubjectId" />
        <button type="submit" id="startSessionBtn" class="btn btn-success">Start Session</button>
    </form>

    <form asp-action="EndSession" method="post" style="display: inline;">
        <input type="hidden" name="subjectId" value="@ViewBag.SubjectId" />
        <button type="submit" id="endSessionBtn" class="btn btn-danger">End Session</button>
    </form>
</div>

<div id="serialConsole" style="background: black; color: lime; padding: 10px; margin-top: 20px; height: 200px; overflow-y: auto;">
    <h3>Serial Console</h3>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/microsoft-signalr/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/arduinoHub")
            .build();

        // Start session button listener
        document.getElementById("startSessionBtn").addEventListener("click", function() {
            fetch("/Professor/StartSession", { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        alert("Error: " + data.message);
                    }
                })
                .catch(err => console.error("Error starting session:", err));
        });

        // End session button listener
        document.getElementById("endSessionBtn").addEventListener("click", function() {
            fetch("/Professor/EndSession", { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        alert("Error: " + data.message);
                    }
                })
                .catch(err => console.error("Error ending session:", err));
        });

        // SignalR connection for fingerprint sensor communication
        connection.on("ReceiveSerialLog", async function(message) {
            console.log("📥 Serial Message:", message);

            // Log the message in the serial console
            const logDiv = document.getElementById("serialConsole");
            const logEntry = document.createElement("div");
            logEntry.textContent = message;
            logDiv.appendChild(logEntry);
            logDiv.scrollTop = logDiv.scrollHeight;

            // Check if the Arduino fingerprint sensor is ready
            if (message.includes("ArduinoFingerPrintSensorReady")) {
                studentForm.style.display = "block";
                statusMessage.textContent = "✅ Fingerprint Sensor Connected!";
            }

            // Check if the message contains a fingerprint ID (e.g., "ID 1")
            const match = message.match(/Found ID #(\d+)/);
            if (match) {
                const fingerprintId = parseInt(match[1]); // Extract the fingerprint ID
                console.log("Detected Fingerprint ID:", fingerprintId);
                    const subjectId = @ViewBag.SubjectId; // Get the current subject ID from ViewBag
                    console.log("Subject Id: ",subjectId);


                try {
                    const subjectId = @ViewBag.SubjectId; // Get the current subject ID from ViewBag
                    const response = await fetch(`/Professor/VerifyFingerprint?fingerprintId=${fingerprintId}&subjectId=${subjectId}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ fingerprintId, subjectId })
                    });

                    const result = await response.json();
                    if (result.success) {
                        alert("✅ Attendance marked successfully!");
                    } else {
                        alert("❌ Error: " + result.message);
                    }
                } catch (error) {
                    console.error("Error verifying fingerprint:", error);
                    alert("❌ Failed to verify fingerprint. Please try again.");
                }
            }
        });

        // Start SignalR connection
        connection.start().catch(err => console.error(err.toString()));
    </script>
}
